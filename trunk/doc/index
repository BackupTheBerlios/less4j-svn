<h2>API Documentation</h2>
<p>
  This library supports an Entreprise Service Bus defined by a stable 
  stack of standard protocols: HTTP, URL, <code>SHA1</code>, 
  <code>JSON</code>, <code>SQL</code>, <code>LDAP</code>, <code>XML</code>
  and ECMA-<code>Script</code>.
</p>
<p>
  The <code>Service</code> interface lays out in seven methods the right 
  way to program entreprise stateless web 2.0 services in a J2EE servlet. 
  A practical set of reusable controllers and functions is included to 
  illustrate, test and validate this interface design. 
</p>  
<p>Each one applies the same <code>Actor</code> or descend from the same 
  <code>Controller</code>, two types ladden with conveniences to leverage
  those protocols as they were intended. Sharing nothing but text references 
  to their network application state, working in small and manageable pieces
  distributed on the network. 
</p>
<p>
  To support the infrastructure requirements of ESB not addressed by
  the stack of standard protocols, less4j implements three new network
  protocols:
</p> 
<ul>
<li>
  IRTD2 for distributed user agent 
  identification and authorization in sequence and time. 
</li>
<li>  
  <code>JSONR</code> for better network input validation 
  and network services descriptions.
</li>
<li>  
  <code>Diva</code> as a relational model for distributed state transitions
  log.
</li>
</ul>
<p>
  Implemented in diverse services, they provide a sound infrastructures to 
  track entreprise resource and business processes in the same workflow but 
  accross distributed services and partitionned legacy applications. 
</p>  
<p>
  ...
</p>
